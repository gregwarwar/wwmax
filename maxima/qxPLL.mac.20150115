/*
This file calculates the equation for the closed loop response
of a the laTestLa PLL

I = charge pump current
C1 = small cap
C2 = big cap
C3 = PCCI loop cap
R2 = main resistor in series with big cap
R3 = PCCI loop resistor
Ao = PCCI loop Amp gain
Az = PCCI loop ZVT gain

N  = divide ratio
kv = VCO gain (Hz/V)

let w = 2.0 * pi * f

let the open loop transfer function be H(w) = N(w) / D(w) = (Nx(w) + j Ny(w)) / (Dx(w) + j Dy(w))
  where Nx and Ny are real, and Dx and Dy are real



The final output A(f) is the magnitude squared of the transfer
function, at freqeuncy f. Take the sqrt of this if you want
the amplitude rather than the power.

The output goes into .../Open/laTestLa3.txt"

*/




eq1 : -I + (v1 - v2) / R2 + v1 * s * C1 = 0;

eq2 : (v2 - v1) / R2 + v2 * s * C2 = 0;

eq3 : v3 = Ao * Az * (v2 - 0) / (1 + s * R3 * C3);

ans : solve([eq1, eq2, eq3], [v1, v2, v3]);


V1 : rhs(ans[1][1]);
V2 : rhs(ans[1][2]);
V3 : rhs(ans[1][3]);

H : (kv * V1 + kc * V3) / (N * s);

sol : ratsimp(H);


solN(s) := ''(ratsimp(num(sol), s));
solD(s) := ''(ratsimp(denom(sol), s));


Nx(w) := ''(ratsimp(realpart(solN(%i * w)), w));
Ny(w) := ''(ratsimp(imagpart(solN(%i * w)), w));

Dx(w) := ''(ratsimp(realpart(solD(%i * w)), w));
Dy(w) := ''(ratsimp(imagpart(solD(%i * w)), w));


/* note xthru is not really necessary here, but maybe good practice */
/* HH is open loop gain, HC is closed loop gain, HE is noise gain   */

HH : ratsimp(xthru((Nx + %i * Ny) / (Dx + %i * Dy)));

HC : ratsimp(xthru(HH / (1 + HH)));

HE : ratsimp(xthru(1  / (1 + HH)));


HH2 : ratsimp(xthru(HH * conjugate(HH)));

HC2 : ratsimp(xthru(HC * conjugate(HC)));

HE2 : ratsimp(xthru(HE * conjugate(HE)));


HHx : ratsimp(xthru(realpart(HH)));
HHy : ratsimp(xthru(imagpart(HH)));






/*

T(s) := ''(solN(s) * solD(-s));

X(s) := ''(ratsimp(realpart(T(%i * w)), w));
Y(s) := ''(ratsimp(imagpart(T(%i * w)), w));

*/


stringout("/Users/warwar/Desktop/Open/qxPLL.txt", 
"#define ^ _PWR_", "",
["solN(s)", solN(s)], "",
["solD(s)", solD(s)], "",
["Nx(w)", Nx(w)], "",
["Ny(w)", Ny(w)], "",
["Dx(w)", Dx(w)], "",
["Dy(w)", Dy(w)], "",
["HH", HH], "",
["HC", HC], "",
["HH2", HH2], "",
["HC2", HC2], "",
["HE2", HE2], "",
["HHx", HHx], "",
["HHy", HHy], "",
"");

